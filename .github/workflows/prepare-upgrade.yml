name: Prepare Upgrade (Creates a PR to upgrade LingView core to the newest stable version available)

env:
  upstream: BrownCLPS/LingView
  upstream_branch: master
  base_branch: master
  pr_branch: master-upgrade

on: workflow_dispatch 

jobs:
  check-actor:
    runs-on: ubuntu-latest
    steps:
    - uses: octokit/request-action@v2.0.0
      with:
        route: GET /repos/:repository/collaborators/${{ github.actor }}
        repository: ${{ github.repository }}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  check-repo:
    runs-on: ubuntu-latest
    outputs:
      is-core: ${{ github.repository == env.upstream }}
    steps:
      - name: Log result
        run: 'echo "Checking if repository is the upstream repository... $answer"'
        env:
          answer: ${{ github.repository == env.upstream }}
  upgrade:
    needs: [check-actor, check-repo]
    if: needs.check-repo.outputs.is-core == 'false'
    runs-on: ubuntu-latest
    env:
      actor: ${{ github.actor }}
      actoremail: ${{ github.actor }}@users.noreply.github.com
    steps:
      - name: Check out base branch
        uses: actions/checkout@v2
        with:
          ref: ${{ env.base_branch }}
          fetch-depth: 0 # fetch the whole history (necessary for merge)
      - name: Merge upstream into base branch
        run: |
          git config user.email "$actoremail"
          git config user.name "$actor"
          git remote add upstream "https://github.com/$upstream.git"
          git fetch upstream
          remote_head_hash=$(git rev-parse "upstream/$upstream_branch")
          echo "::set-env name=remote_head_hash::$remote_head_hash"
          git merge --no-commit --no-ff -Xtheirs "upstream/$upstream_branch" || echo "There are unresolved merge conflicts. Make sure you resolve them before merging the pull request."
          # revert any updates in data path and build path
          git reset -- build # build is gitignored, but sometimes changes to build cause merge conflicts anyway *shrug*
          git reset -- data
          git checkout -- data
          # GitHub Actions are not allowed to create or modify workflows, so discard any workflow changes and warn about them.
          test $(git status | grep -c workflows) -lt 1 || echo "There were workflow changes, which can't be included in the automated PR. You will need to manually update your files in .github/workflows/ to match the $upstream version."
          git reset -- .github/workflows
          git checkout -- .github/workflows
          # If merging fails, perform the merge on your local machine with this sequence of commands:
          # [if you've never done it before] git remote add upstream "https://github.com/BrownCLPS/LingView.git"
          # git pull
          # git fetch upstream
          # git merge --no-ff -Xtheirs upstream/master
          # git reset -- data
          # git checkout -- data
      - name: Create Pull Request
        uses: peter-evans/create-pull-request@v2
        with:
          commit-message: Upgrade LingView core version
          committer: GitHub <noreply@github.com>
          author: ${{ env.actor }} <${{ env.actoremail }}>
          title: 'Upgrade LingView Core'
          body: |
            Pull request to upgrade LingView version to `${{ env.upstream_branch }}` (${{ env.remote_head_hash }}) is ready to review and merge!
            
            > I automatically ignored any changes made to the `data/` folder, so your FLEx and ELAN files will not be changed. :)
            > 
            > When you review this, please make sure that I didn't accidentally undo any of your LingView customizations (e.g. if your `index.html` or `jsx/App/AboutPage.jsx` is different from the version at ${{ env.upstream }})!
            > 
            > Please also check for merge conflicts (indicated by `>>>`, `===`, and `<<<` on the files changed tab). If you find any, make sure you fix them before merging this pull request. To fix anything in this pull request, just push additional commits to the ${{ env.pr_branch }} branch.
            >
            > I ignored any changes made to the `.github/workflows` folder because, since I'm just a bot, I'm not allowed to change those files. You can update your workflow files by replacing them with the version at ${{ env.upstream }}/${{ env.upstream_branch }}.
            
            _Auto-generated by [create-pull-request][1]_

            [1]: https://github.com/peter-evans/create-pull-request
          labels: automated pr
          branch: ${{ env.pr_branch }}
